[{"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/index.tsx":"1","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/App.tsx":"2","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/models/mock-pokemon.ts":"3","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-list.tsx":"4","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-card.tsx":"5","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-date.ts":"6","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-type.ts":"7","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-details.tsx":"8","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/page-not-found.tsx":"9","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-edit.tsx":"10","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-form.tsx":"11","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/services/pokemon-service.ts":"12","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/index.tsx":"13","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/App.tsx":"14","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/LoginPage.tsx":"15","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/UsersList.tsx":"16","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/AccueilPage.tsx":"17","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-user.ts":"18","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/userForm.tsx":"19","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/helpers/format-roles.ts":"20","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-role.ts":"21","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/user.ts":"22"},{"size":155,"mtime":1607776842415,"results":"23","hashOfConfig":"24"},{"size":955,"mtime":1610414112451,"results":"25","hashOfConfig":"24"},{"size":2264,"mtime":1607799782313,"results":"26","hashOfConfig":"24"},{"size":777,"mtime":1608924720959,"results":"27","hashOfConfig":"24"},{"size":1434,"mtime":1608717603266,"results":"28","hashOfConfig":"24"},{"size":164,"mtime":1608919620336,"results":"29","hashOfConfig":"24"},{"size":1021,"mtime":1608660828176,"results":"30","hashOfConfig":"24"},{"size":2869,"mtime":1608995010857,"results":"31","hashOfConfig":"24"},{"size":497,"mtime":1608718058048,"results":"32","hashOfConfig":"24"},{"size":1003,"mtime":1608924730136,"results":"33","hashOfConfig":"24"},{"size":7927,"mtime":1608994986292,"results":"34","hashOfConfig":"24"},{"size":1532,"mtime":1610414883172,"results":"35","hashOfConfig":"24"},{"size":155,"mtime":1610471092257,"results":"36","hashOfConfig":"37"},{"size":913,"mtime":1610477941807,"results":"38","hashOfConfig":"37"},{"size":1944,"mtime":1610473695856,"results":"39","hashOfConfig":"37"},{"size":950,"mtime":1610476237520,"results":"40","hashOfConfig":"37"},{"size":347,"mtime":1610471140149,"results":"41","hashOfConfig":"37"},{"size":429,"mtime":1610475460999,"results":"42","hashOfConfig":"37"},{"size":4345,"mtime":1610481570277,"results":"43","hashOfConfig":"37"},{"size":367,"mtime":1610477782719,"results":"44","hashOfConfig":"37"},{"size":170,"mtime":1610481636777,"results":"45","hashOfConfig":"37"},{"size":570,"mtime":1610481231133,"results":"46","hashOfConfig":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"jcuufu",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"io0woj",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/index.tsx",[],["99","100"],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/App.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/models/mock-pokemon.ts",[],["101","102"],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-list.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-card.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-date.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/helpers/format-type.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-details.tsx",["103"],"import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\n                    <i className=\"material-icons\">edit</i>\n                </Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/page-not-found.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/pages/pokemon-edit.tsx",["104"],"import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport POKEMONS from '../models/mock-pokemon';\nimport PokemonService from '../services/pokemon-service';\n \ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\">Aucun pokémon à afficher !</h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/components/pokemon-form.tsx",[],["105","106"],"/Users/ddiallo/Documents/Dev-Projets/React/REACT-POKEMONS-APP/src/services/pokemon-service.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/index.tsx",[],["107","108"],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/App.tsx",["109"],"import React, { FunctionComponent } from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport AccueilPage from './pages/AccueilPage';\nimport UsersList from './pages/UsersList';\nimport LoginPage from './pages/LoginPage';\nimport UserForm from './pages/userForm';\n\nconst App: FunctionComponent = () => {\n  \n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <div className=\"brand-logo center\">HISP Africa test App</div>\n          </div>\n        </nav>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage}/>\n        <Route exact path=\"/accueil\" component={AccueilPage}/>\n        <Route exact path=\"/users\" component={UsersList}/>\n        <Route path=\"/user/add\" component={UserForm}/>\n        {/* <Route component={PageNotFound}/> */}\n      </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/LoginPage.tsx",["110"],"import React, { FunctionComponent, useState } from 'react';\nimport User from '../models/user';\n\ntype Props = {\n  user: User\n};\n\ntype Field = {\n  value?: any\n  error?: String\n  isValid?: boolean\n}\n\ntype Form = {\n  username: Field\n  password: Field\n}\n\nconst LoginForm: FunctionComponent<Props> = ({ user }) => {\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '', isValid: true },\n    password: { value: '', isValid: true },\n  });\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // if(isFormValid) {\n    //   pokemon.name = form.name.value;\n    //   pokemon.cp = form.cp.value;\n    //   pokemon.hp = form.hp.value;\n    //   pokemon.types = form.types.value;\n    //   PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n    // }\n  }\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User name</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.username.value} ></input>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">User name</label>\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.username.value} ></input>\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Connexion</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;","/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/UsersList.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/AccueilPage.tsx",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-user.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/pages/userForm.tsx",["111","112"],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/helpers/format-roles.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/mock-role.ts",[],"/Users/ddiallo/Documents/Dev-Projets/React/HISP-TEST/src/models/user.ts",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"120","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"119","severity":1,"message":"127","line":2,"column":49,"nodeType":"121","messageId":"122","endLine":2,"endColumn":53},{"ruleId":"119","severity":1,"message":"128","line":21,"column":16,"nodeType":"121","messageId":"122","endLine":21,"endColumn":23},{"ruleId":"119","severity":1,"message":"129","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":12},{"ruleId":"119","severity":1,"message":"130","line":35,"column":16,"nodeType":"121","messageId":"122","endLine":35,"endColumn":23},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],"@typescript-eslint/no-unused-vars","'POKEMONS' is defined but never used.","Identifier","unusedVar",["131"],["132"],["131"],["132"],"'Link' is defined but never used.","'setForm' is assigned a value but never used.","'Role' is defined but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]